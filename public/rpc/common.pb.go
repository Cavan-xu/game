// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

package rpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type MsgId int32

const (
	MsgId_Invalid MsgId = 0
	// client <> game
	MsgId_CToG_RoleLogin         MsgId = 1
	MsgId_CToG_RoleRegister      MsgId = 2
	MsgId_CToG_HeartBeat         MsgId = 3
	MsgId_CToG_ReceiveMailReward MsgId = 4
	// game > client
	MsgId_GToC_RoleMailNtf MsgId = 1000
)

var MsgId_name = map[int32]string{
	0:    "Invalid",
	1:    "CToG_RoleLogin",
	2:    "CToG_RoleRegister",
	3:    "CToG_HeartBeat",
	4:    "CToG_ReceiveMailReward",
	1000: "GToC_RoleMailNtf",
}
var MsgId_value = map[string]int32{
	"Invalid":                0,
	"CToG_RoleLogin":         1,
	"CToG_RoleRegister":      2,
	"CToG_HeartBeat":         3,
	"CToG_ReceiveMailReward": 4,
	"GToC_RoleMailNtf":       1000,
}

func (x MsgId) String() string {
	return proto.EnumName(MsgId_name, int32(x))
}
func (MsgId) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type ResultId int32

const (
	ResultId_ResultIdInvalid ResultId = 0
	ResultId_Success         ResultId = 1
	ResultId_RoleNotExist    ResultId = 2
	ResultId_System          ResultId = 3
	ResultId_InvalidParams   ResultId = 4
	ResultId_Fail            ResultId = 5
	ResultId_ViolateWord     ResultId = 6
	ResultId_SystemBusy      ResultId = 7
)

var ResultId_name = map[int32]string{
	0: "ResultIdInvalid",
	1: "Success",
	2: "RoleNotExist",
	3: "System",
	4: "InvalidParams",
	5: "Fail",
	6: "ViolateWord",
	7: "SystemBusy",
}
var ResultId_value = map[string]int32{
	"ResultIdInvalid": 0,
	"Success":         1,
	"RoleNotExist":    2,
	"System":          3,
	"InvalidParams":   4,
	"Fail":            5,
	"ViolateWord":     6,
	"SystemBusy":      7,
}

func (x ResultId) String() string {
	return proto.EnumName(ResultId_name, int32(x))
}
func (ResultId) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

type CommonReq struct {
	RoleId int32 `protobuf:"varint,1,opt,name=RoleId" json:"RoleId,omitempty"`
}

func (m *CommonReq) Reset()                    { *m = CommonReq{} }
func (m *CommonReq) String() string            { return proto.CompactTextString(m) }
func (*CommonReq) ProtoMessage()               {}
func (*CommonReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *CommonReq) GetRoleId() int32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

type CommonAck struct {
	ResultId ResultId `protobuf:"varint,1,opt,name=ResultId,enum=rpc.ResultId" json:"ResultId,omitempty"`
	ErrMsg   string   `protobuf:"bytes,2,opt,name=ErrMsg" json:"ErrMsg,omitempty"`
}

func (m *CommonAck) Reset()                    { *m = CommonAck{} }
func (m *CommonAck) String() string            { return proto.CompactTextString(m) }
func (*CommonAck) ProtoMessage()               {}
func (*CommonAck) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *CommonAck) GetResultId() ResultId {
	if m != nil {
		return m.ResultId
	}
	return ResultId_ResultIdInvalid
}

func (m *CommonAck) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func init() {
	proto.RegisterType((*CommonReq)(nil), "rpc.CommonReq")
	proto.RegisterType((*CommonAck)(nil), "rpc.CommonAck")
	proto.RegisterEnum("rpc.MsgId", MsgId_name, MsgId_value)
	proto.RegisterEnum("rpc.ResultId", ResultId_name, ResultId_value)
}

func init() { proto.RegisterFile("common.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 328 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x91, 0xcf, 0x4e, 0x2a, 0x31,
	0x14, 0xc6, 0xef, 0x00, 0x33, 0x03, 0x87, 0x7f, 0x87, 0x73, 0x03, 0x21, 0x77, 0x45, 0xb8, 0x1b,
	0x64, 0xc1, 0x42, 0x9f, 0x40, 0x08, 0x22, 0x89, 0x10, 0x53, 0x88, 0x26, 0x6e, 0x4c, 0x9d, 0xa9,
	0x93, 0xc6, 0x19, 0x8a, 0x6d, 0x41, 0x79, 0x01, 0xe3, 0xa3, 0xfa, 0x18, 0x66, 0x60, 0x80, 0x5d,
	0xcf, 0x77, 0x7e, 0xdf, 0xd7, 0x36, 0x1f, 0x54, 0x02, 0x95, 0x24, 0x6a, 0x35, 0x58, 0x6b, 0x65,
	0x15, 0xe5, 0xf5, 0x3a, 0xe8, 0xfe, 0x87, 0xd2, 0x68, 0x2f, 0x32, 0xf1, 0x4e, 0x2d, 0xf0, 0x98,
	0x8a, 0xc5, 0x34, 0x6c, 0x3b, 0x1d, 0xa7, 0xe7, 0xb2, 0x6c, 0xea, 0xce, 0x8f, 0xd0, 0x75, 0xf0,
	0x46, 0x17, 0x50, 0x64, 0xc2, 0x6c, 0x62, 0x9b, 0x61, 0xb5, 0xcb, 0xea, 0x40, 0xaf, 0x83, 0xc1,
	0x51, 0x64, 0xa7, 0x75, 0x9a, 0x37, 0xd6, 0x7a, 0x66, 0xa2, 0x76, 0xae, 0xe3, 0xf4, 0x4a, 0x2c,
	0x9b, 0xfa, 0x5f, 0x0e, 0xb8, 0x33, 0x13, 0x4d, 0x43, 0x2a, 0x83, 0x3f, 0x5d, 0x6d, 0x79, 0x2c,
	0x43, 0xfc, 0x43, 0x04, 0xb5, 0xd1, 0x52, 0x4d, 0x9e, 0xd3, 0x5b, 0xef, 0x54, 0x24, 0x57, 0xe8,
	0x50, 0x13, 0x1a, 0x27, 0x8d, 0x89, 0x48, 0x1a, 0x2b, 0x34, 0xe6, 0x4e, 0xe8, 0xad, 0xe0, 0xda,
	0x0e, 0x05, 0xb7, 0x98, 0xa7, 0x7f, 0xd0, 0x3a, 0xa0, 0x22, 0x10, 0x72, 0x2b, 0x66, 0x5c, 0xc6,
	0x4c, 0x7c, 0x70, 0x1d, 0x62, 0x81, 0x9a, 0x80, 0x93, 0xa5, 0x1a, 0xed, 0x63, 0xd2, 0xc5, 0xdc,
	0xbe, 0xe2, 0x8f, 0xdf, 0xff, 0x76, 0xce, 0x9f, 0xa1, 0xbf, 0x50, 0x3f, 0x9e, 0xcf, 0x6f, 0x2a,
	0x83, 0xbf, 0xd8, 0x04, 0x81, 0x30, 0x06, 0x1d, 0x42, 0xa8, 0xa4, 0x01, 0x73, 0x65, 0xc7, 0x9f,
	0xd2, 0x58, 0xcc, 0x11, 0x80, 0xb7, 0xd8, 0x19, 0x2b, 0x12, 0xcc, 0x53, 0x03, 0xaa, 0x99, 0xef,
	0x9e, 0x6b, 0x9e, 0x18, 0x2c, 0x50, 0x11, 0x0a, 0x37, 0x5c, 0xc6, 0xe8, 0x52, 0x1d, 0xca, 0x0f,
	0x52, 0xc5, 0xdc, 0x8a, 0x47, 0xa5, 0x43, 0xf4, 0xa8, 0x06, 0x70, 0x70, 0x0e, 0x37, 0x66, 0x87,
	0xfe, 0xd0, 0x7d, 0x4a, 0xfb, 0x78, 0xf1, 0xf6, 0xdd, 0x5c, 0xfd, 0x06, 0x00, 0x00, 0xff, 0xff,
	0x44, 0x58, 0xde, 0x33, 0xab, 0x01, 0x00, 0x00,
}
